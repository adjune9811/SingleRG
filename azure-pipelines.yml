trigger:
  - main

pool:
  vmImage: ubuntu-latest

variables:
  TF_VERSION: '1.12.1'
  TF_WORKING_DIR: '.'

steps:

# Step 1: Install Terraform
- script: |
    wget https://releases.hashicorp.com/terraform/${TF_VERSION}/terraform_${TF_VERSION}_linux_amd64.zip
    unzip terraform_${TF_VERSION}_linux_amd64.zip
    sudo mv terraform /usr/local/bin/
    terraform version
  displayName: 'Install Terraform'

# Step 2: Checkout Code
- checkout: self

# Step 3: Export SPN Credentials from Service Connection
- task: AzureCLI@2
  name: SetSPVars
  inputs:
    azureSubscription: 'AZ-SPN-idmay25'
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      echo "Exporting Azure SPN environment variables..."
      echo "##vso[task.setvariable variable=ARM_CLIENT_ID]$servicePrincipalId"
      echo "##vso[task.setvariable variable=ARM_CLIENT_SECRET]$servicePrincipalKey"
      echo "##vso[task.setvariable variable=ARM_SUBSCRIPTION_ID]$subscriptionId"
      echo "##vso[task.setvariable variable=ARM_TENANT_ID]$tenantId"
  displayName: 'Extract Service Principal Credentials'

# Step 4: Terraform Init
- script: |
    terraform -chdir=$(TF_WORKING_DIR) init
  displayName: 'Terraform Init'
  env:
    ARM_CLIENT_ID: $(ARM_CLIENT_ID)
    ARM_CLIENT_SECRET: $(ARM_CLIENT_SECRET)
    ARM_SUBSCRIPTION_ID: $(ARM_SUBSCRIPTION_ID)
    ARM_TENANT_ID: $(ARM_TENANT_ID)

# Step 5: Terraform Format (Auto-Fix)
- script: |
    terraform -chdir=$(TF_WORKING_DIR) fmt
  displayName: 'Terraform Format'
  env:
    ARM_CLIENT_ID: $(ARM_CLIENT_ID)
    ARM_CLIENT_SECRET: $(ARM_CLIENT_SECRET)
    ARM_SUBSCRIPTION_ID: $(ARM_SUBSCRIPTION_ID)
    ARM_TENANT_ID: $(ARM_TENANT_ID)

# Step 6: Terraform Validate
- script: |
    terraform -chdir=$(TF_WORKING_DIR) validate
  displayName: 'Terraform Validate'
  env:
    ARM_CLIENT_ID: $(ARM_CLIENT_ID)
    ARM_CLIENT_SECRET: $(ARM_CLIENT_SECRET)
    ARM_SUBSCRIPTION_ID: $(ARM_SUBSCRIPTION_ID)
    ARM_TENANT_ID: $(ARM_TENANT_ID)

# Step 7: Terraform Plan
- script: |
    terraform -chdir=$(TF_WORKING_DIR) plan -out=tfplan
  displayName: 'Terraform Plan'
  env:
    ARM_CLIENT_ID: $(ARM_CLIENT_ID)
    ARM_CLIENT_SECRET: $(ARM_CLIENT_SECRET)
    ARM_SUBSCRIPTION_ID: $(ARM_SUBSCRIPTION_ID)
    ARM_TENANT_ID: $(ARM_TENANT_ID)

# Step 8: Terraform Apply
- script: |
    terraform -chdir=$(TF_WORKING_DIR) apply -auto-approve tfplan
  displayName: 'Terraform Apply'
  env:
    ARM_CLIENT_ID: $(ARM_CLIENT_ID)
    ARM_CLIENT_SECRET: $(ARM_CLIENT_SECRET)
    ARM_SUBSCRIPTION_ID: $(ARM_SUBSCRIPTION_ID)
    ARM_TENANT_ID: $(ARM_TENANT_ID)
