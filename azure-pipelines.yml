trigger:
  - main

pool:
  vmImage: ubuntu-latest

variables:
  TF_VERSION: '1.12.1'
  TF_WORKING_DIR: './terraform'  # Adjust if your .tf files are elsewhere

steps:

# Step 1: Install Terraform v1.12.1
- script: |
    set -e
    echo "ðŸ”½ Downloading Terraform ${TF_VERSION}..."
    wget https://releases.hashicorp.com/terraform/${TF_VERSION}/terraform_${TF_VERSION}_linux_amd64.zip

    echo "ðŸ“¦ Unzipping..."
    unzip terraform_${TF_VERSION}_linux_amd64.zip

    echo "ðŸšš Moving to /usr/local/bin"
    sudo mv terraform /usr/local/bin/

    echo "ðŸ“Œ Installed Terraform version:"
    terraform version
  displayName: 'Install Terraform v1.12.1'

# Step 2: Checkout Code
- checkout: self

# Step 3: Login to Azure using your Service Principal
- task: AzureCLI@2
  inputs:
    azureSubscription: 'AZ-SPN-idmay25'
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      echo "âœ… Successfully authenticated to Azure using service connection"
  displayName: 'Azure Login via SPN'

# Step 4: Terraform Init
- script: |
    terraform -chdir=$(TF_WORKING_DIR) init
  displayName: 'Terraform Init'

# Step 5: Terraform Format Check
- script: |
    terraform -chdir=$(TF_WORKING_DIR) fmt -check
  displayName: 'Terraform Format Check'

# Step 6: Terraform Validate
- script: |
    terraform -chdir=$(TF_WORKING_DIR) validate
  displayName: 'Terraform Validate'

# Step 7: Terraform Plan
- script: |
    terraform -chdir=$(TF_WORKING_DIR) plan -out=tfplan
  displayName: 'Terraform Plan'

# Step 8 (Optional): Terraform Apply
# - script: |
#     terraform -chdir=$(TF_WORKING_DIR) apply -auto-approve tfplan
#   displayName: 'Terraform Apply'
